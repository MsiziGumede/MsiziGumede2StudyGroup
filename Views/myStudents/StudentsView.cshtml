@model IEnumerable<MsiziGumede2StudyGroup.Models.myStudents>

@{
    ViewBag.Title = "StudentsView";
}

<h2>StudentsView</h2>

<table class="table table-bordered" id="studentsTable">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.StudentNumber)</th>
            <th>@Html.DisplayNameFor(model => model.Name)</th>
            <th>@Html.DisplayNameFor(model => model.Surname)</th>
            <th>@Html.DisplayNameFor(model => model.Email)</th>
            <th>Link to personal page</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.StudentNumber)</td>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Surname)</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td>
                    <button onclick="window.location.href='@Url.Content(item.myLink)'" class="btn btn-success">
                        View Page
                    </button>
                </td>
                <td>
                    <button onclick="removeRow(this)" class="btn btn-danger">
                        Delete
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function removeRow(button) {
        button.closest("tr").remove(); // Removes row when "Remove" button is clicked
    }

    document.addEventListener("DOMContentLoaded", function () {
        let rows = document.querySelectorAll("#studentsTable tbody tr");

        rows.forEach(row => {
            let nameCell = row.cells[1]; // Name is in the second column
            let name = nameCell.textContent.trim();

            if (name.charAt(0).toUpperCase() === "B") {
                row.style.color = "red"; // Change text color to red
            }
        });
    });
</script>



